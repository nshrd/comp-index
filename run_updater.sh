#!/bin/bash

# ============================================================================
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–∑–∏—Ç–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./run_updater.sh [--force] [--no-commit]
# ============================================================================

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DATA_DIR="$SCRIPT_DIR/data"
SEEDS_REPO_DIR="$SCRIPT_DIR/seeds_repo"  # –ö–ª–æ–Ω –≤–∞—à–µ–≥–æ Pine Seeds —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
LOG_FILE="$SCRIPT_DIR/updater.log"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1" | tee -a "$LOG_FILE"
}

error() {
    echo -e "${RED}[ERROR $(date '+%Y-%m-%d %H:%M:%S')]${NC} $1" | tee -a "$LOG_FILE"
}

success() {
    echo -e "${GREEN}[SUCCESS $(date '+%Y-%m-%d %H:%M:%S')]${NC} $1" | tee -a "$LOG_FILE"
}

warning() {
    echo -e "${YELLOW}[WARNING $(date '+%Y-%m-%d %H:%M:%S')]${NC} $1" | tee -a "$LOG_FILE"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
FORCE_UPDATE=false
NO_COMMIT=false

for arg in "$@"; do
    case $arg in
        --force)
            FORCE_UPDATE=true
            shift
            ;;
        --no-commit)
            NO_COMMIT=true
            shift
            ;;
        -h|--help)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [--force] [--no-commit]"
            echo "  --force     –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
            echo "  --no-commit –ù–µ –∫–æ–º–º–∏—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Git"
            echo "  --help      –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            exit 0
            ;;
    esac
done

log "üöÄ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–∑–∏—Ç–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è Python
if [[ "$VIRTUAL_ENV" == "" ]]; then
    warning "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ Python –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
    if [[ -f "$SCRIPT_DIR/venv/bin/activate" ]]; then
        log "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        source "$SCRIPT_DIR/venv/bin/activate"
    else
        warning "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –°–æ–∑–¥–∞—é –Ω–æ–≤–æ–µ..."
        python3 -m venv "$SCRIPT_DIR/venv"
        source "$SCRIPT_DIR/venv/bin/activate"
        pip install -r "$SCRIPT_DIR/requirements.txt"
    fi
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
mkdir -p "$DATA_DIR"
mkdir -p "$SEEDS_REPO_DIR"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ API
if [[ -z "${APP_RANKINGS_API_KEY}" ]] && [[ -f "$SCRIPT_DIR/.env" ]]; then
    log "–ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞..."
    export $(cat "$SCRIPT_DIR/.env" | grep -v '^#' | xargs)
fi

if [[ -z "${APP_RANKINGS_API_KEY}" ]]; then
    warning "API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é APP_RANKINGS_API_KEY –∏–ª–∏ .env —Ñ–∞–π–ª"
fi

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
PREV_COMP_MA=""
if [[ -f "$DATA_DIR/COMP_MA.csv" ]]; then
    PREV_COMP_MA=$(tail -n 1 "$DATA_DIR/COMP_MA.csv" 2>/dev/null || echo "")
fi

# –ó–∞–ø—É—Å–∫ Python —Å–∫—Ä–∏–ø—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
log "üìä –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö..."
cd "$SCRIPT_DIR"

if python3 data_processor.py; then
    success "‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
else
    error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
if [[ ! -f "$DATA_DIR/COMP_MA.csv" ]] || [[ ! -f "$DATA_DIR/COMP_RAW.csv" ]]; then
    error "‚ùå CSV —Ñ–∞–π–ª—ã –Ω–µ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–∞–Ω–Ω—ã—Ö
CURR_COMP_MA=$(tail -n 1 "$DATA_DIR/COMP_MA.csv" 2>/dev/null || echo "")
if [[ "$PREV_COMP_MA" == "$CURR_COMP_MA" ]] && [[ "$FORCE_UPDATE" == false ]]; then
    log "üìù –î–∞–Ω–Ω—ã–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å. –ü—Ä–æ–ø—É—Å–∫–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
    exit 0
fi

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ Seeds —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
if [[ -d "$SEEDS_REPO_DIR/.git" ]]; then
    log "üì§ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Seeds —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    
    cd "$SEEDS_REPO_DIR"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Git
    if ! git status &>/dev/null; then
        error "‚ùå Seeds —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º"
        exit 1
    fi
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ remote
    git fetch origin
    git pull origin main 2>/dev/null || git pull origin master 2>/dev/null || true
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ data –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    mkdir -p data
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    cp "$DATA_DIR/COMP_MA.csv" "data/"
    cp "$DATA_DIR/COMP_RAW.csv" "data/"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ Git
    if git diff --quiet; then
        log "üìù –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ Seeds —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
    else
        if [[ "$NO_COMMIT" == false ]]; then
            log "üíæ –ö–æ–º–º–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
            
            git add data/COMP_MA.csv data/COMP_RAW.csv
            git commit -m "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–∑–∏—Ç–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ $(date '+%Y-%m-%d %H:%M')"
            
            # –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ remote
            if git push origin HEAD; then
                success "üöÄ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Seeds —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
            else
                error "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Seeds —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
                exit 1
            fi
        else
            log "üîÑ –§–∞–π–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ (–±–µ–∑ –∫–æ–º–º–∏—Ç–∞)"
        fi
    fi
else
    error "‚ùå Seeds —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω"
    log "–ö–ª–æ–Ω–∏—Ä—É–π—Ç–µ –≤–∞—à Pine Seeds —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤: $SEEDS_REPO_DIR"
    exit 1
fi

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤ (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π)
find "$SCRIPT_DIR" -name "*.log" -type f -mtime +30 -delete 2>/dev/null || true

success "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
if [[ -f "$DATA_DIR/COMP_MA.csv" ]]; then
    TOTAL_RECORDS=$(wc -l < "$DATA_DIR/COMP_MA.csv")
    LAST_VALUE=$(tail -n 1 "$DATA_DIR/COMP_MA.csv" | cut -d',' -f5)
    log "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: $((TOTAL_RECORDS-1)) –∑–∞–ø–∏—Å–µ–π, –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: $LAST_VALUE"
fi 