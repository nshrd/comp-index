#!/bin/bash

# SSL Prerequisites Check Script
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞

set -e

DOMAIN="charts.expert"
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
echo "–î–æ–º–µ–Ω: $DOMAIN"
echo ""

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫
HAS_ERRORS=false

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
check_requirement() {
    local name="$1"
    local command="$2"
    local expected="$3"
    
    printf "%-40s" "$name"
    
    if eval "$command" &>/dev/null; then
        echo -e "${GREEN}‚úì OK${NC}"
        return 0
    else
        echo -e "${RED}‚úó FAIL${NC}"
        if [ -n "$expected" ]; then
            echo "   –û–∂–∏–¥–∞–µ—Ç—Å—è: $expected"
        fi
        HAS_ERRORS=true
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç:"
check_requirement "Docker" "command -v docker" "sudo apt install docker.io"
check_requirement "Docker Compose" "command -v docker-compose" "sudo apt install docker-compose"
check_requirement "OpenSSL" "command -v openssl" "sudo apt install openssl"
check_requirement "Curl" "command -v curl" "sudo apt install curl"
check_requirement "sudo –ø—Ä–∞–≤–∞" "sudo -n true" "–î–æ–±–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É sudo"

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö —É—Å–ª–æ–≤–∏–π
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö —É—Å–ª–æ–≤–∏–π:"
check_requirement "DNS —Ä–µ–∑–æ–ª—é—Ü–∏—è ($DOMAIN)" "nslookup $DOMAIN" "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS –∑–∞–ø–∏—Å–∏"
check_requirement "–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ 80" "sudo ss -tulpn | grep ':80 '" "–û—Å–≤–æ–±–æ–¥–∏—Ç–µ –ø–æ—Ä—Ç 80"
check_requirement "–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ 443" "sudo ss -tulpn | grep ':443 '" "–û—Å–≤–æ–±–æ–¥–∏—Ç–µ –ø–æ—Ä—Ç 443"

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Let's Encrypt
echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Let's Encrypt:"
check_requirement "–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å ACME API" "curl -s https://acme-v02.api.letsencrypt.org/directory" "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã:"
check_requirement "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è /etc/ssl/certs" "test -d /etc/ssl/certs" "sudo mkdir -p /etc/ssl/certs"
check_requirement "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è /etc/ssl/private" "test -d /etc/ssl/private" "sudo mkdir -p /etc/ssl/private"
check_requirement "–ü—Ä–∞–≤–∞ –∑–∞–ø–∏—Å–∏ –≤ /etc/ssl" "sudo test -w /etc/ssl" "sudo chmod 755 /etc/ssl"

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker:"
check_requirement "Docker —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω" "systemctl is-active docker" "sudo systemctl start docker"
check_requirement "Docker –¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ sudo" "docker ps" "sudo usermod -aG docker $USER && newgrp docker"

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
echo "üìú –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤:"
if [ -f "/etc/ssl/certs/charts.expert.crt" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞–π–¥–µ–Ω${NC}"
    echo "   –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:"
    openssl x509 -in /etc/ssl/certs/charts.expert.crt -text -noout | grep -A 2 Validity | sed 's/^/   /'
    
    if openssl x509 -checkend 86400 -noout -in /etc/ssl/certs/charts.expert.crt; then
        echo -e "   ${GREEN}‚úì –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –±–æ–ª–µ–µ 24 —á–∞—Å–æ–≤${NC}"
    else
        echo -e "   ${RED}‚ö†Ô∏è  –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏—Å—Ç–µ–∫–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤${NC}"
    fi
else
    echo -e "${YELLOW}‚ÑπÔ∏è  –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–≤–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)${NC}"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "‚öôÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
check_requirement "docker-compose.yml —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f docker-compose.yml"
check_requirement "nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f nginx/nginx.conf"
check_requirement "–°–∫—Ä–∏–ø—Ç ssl_setup.sh —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "test -f scripts/ssl_setup.sh"

echo ""

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
if [ "$HAS_ERRORS" = true ]; then
    echo -e "${RED}‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã. –£—Å—Ç—Ä–∞–Ω–∏—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –ø–æ–ª—É—á–µ–Ω–∏–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞.${NC}"
    exit 1
else
    echo -e "${GREEN}‚úÖ –í—Å–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!${NC}"
    echo ""
    echo "üöÄ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:"
    echo "   ./scripts/ssl_setup.sh"
    echo ""
    echo "üìù –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Makefile:"
    echo "   make ssl-setup"
    exit 0
fi 